name: Build, Test and Deploy React Application

# Controls when the action will run.
on:
 # Triggers the workflow on push or pull request events but only for the main branch
 push:
   branches: [ main ]
 pull_request:
   branches: [ main ]
   
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

 build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest          
    strategy:
     matrix:
       node-version: [21.x]
  # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
   # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
     - uses: actions/checkout@v4
       # name = log
     - name: Use Node.js ${{ matrix.node-version }}
       uses: actions/setup-node@v2
       with:
         node-version: ${{ matrix.node-version }}
     - name: npm ci, build and test
       run: |
         npm ci
         npm test
         npm run jsdoc
         REACT_APP_SERVER_URL=${{secrets.REACT_APP_SERVER_URL}} npm run build --if-present
     - name: Upload coverage reports to Codecov
       uses: codecov/codecov-action@v5
       with:
        token: ${{ secrets.CODECOV_TOKEN }}
     - name: Setup Pages
       id: pages
       uses: actions/configure-pages@v3
     - name: CheckVersion
       run: |
          publishedVersion=$(npm view fleur-web-dev version)
          currentVersion=$(jq -r '.version' package.json)

          echo "Published version: $publishedVersion"
          echo "Current version: $currentVersion"

          if [ "$publishedVersion" = "$currentVersion" ]; then
            echo "Version has not changed"
            echo "VERSIONCHANGED=false" >> $GITHUB_ENV
          else
            echo "Version has changed"
            echo "VERSIONCHANGED=true" >> $GITHUB_ENV
          fi
     - name: Push to GitHub Pages
       if: env.VERSIONCHANGED == 'true'
       run: npm run build-npm
     - name: Authenticate with npm
       run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
     - name: Build and publish on npm
       if: env.VERSIONCHANGED == 'true'
       run: |
        git config --global user.email "fleur.kernevez@ynov.com"
        git config --global user.name "fleurk"
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
        npm run build-npm
        npm publish
     - name: Build the stack
       run: docker compose up -d
     #- name: Run e2e tests with cypress
     #  uses: cypress-io/github-action@v6
     - name: stop the stack
       run: docker compose down
     - name: Upload artifact
       uses: actions/upload-pages-artifact@v3
       with:
        # Upload entire repository
        path: build
        if-no-files-found: error
        
 # Deploy an other job
 deploy:
 # Deploy to the github-pages environment
  environment:
   name: github-pages
   url: ${{steps.deployment.outputs.page_url}}
  runs-on: ubuntu-latest
 # Grant GITHUB_TOKEN the permissions required to make a page deployment
  permissions:
   pages: write
   id-token: write
  # Add a dependency to the build job (on ne déploie que si nos tests sont passés)
  needs: build_test
   # Specify runner + deployment step
  steps:
  - name: Deploy to GitHub Pages
    id: deployment
    uses: actions/deploy-pages@v4
